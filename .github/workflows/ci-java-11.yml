name: CI Java 11
on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '**/*.gradle*'
    branches:
      - main
jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: "Restore Gradle cache"
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build -no-daemon --no-parallel --stacktrace
      - name: Codecov-Umbrella
        uses: codecov/codecov-action@v2
        with:
          directory: ./build/reports/jacoco
          flags: unittests
          fail_ci_if_error: true
          verbose: true
  ci-rejson:
    #Temp job for RedisJSON, need to find a better way to run tests against multiple version of redis after build.
    runs-on: ubuntu-latest
    services:
      redis:
        image: redislabs/rejson:2.2.0
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: "Restore Gradle cache"
        uses: actions/cache@v2.1.7
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build -no-daemon --no-parallel --stacktrace -x test
      - name: Run RedisJSON Test
        run: ./gradlew test --tests io.github.crackthecodeabhi.kreds.commands.JsonCommandsTest
